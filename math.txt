		|
		|			* P
		|	/
		|  /
		| /
_ _ _ _ |/ _ _ _ _ _ _ _
	   /|
	  / |
	 /	|


P = (x, y, z)
const v = new THREE.Vector3(x, y, z);

[ distance from (0; 0) ]

d = sqrt(x^2 + y^2 + z^2)		{mostly decimal number}
const d = v.distanceTo(0, 0, 0);

number of squares able to fit:

n = floor(d)
.ceil(v)		<- round up to the nearest integer value

||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||

Constructing line:

From (0, 0, 0)
Get normalized vector (lenght = 1)
Create Box at the end of the vector
Move vector
Repeat

||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||--||

